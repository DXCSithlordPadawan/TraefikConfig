# docker-compose.yml for Traefik
version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard (optional, can be disabled in production)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - ./dynamic.yml:/dynamic.yml:ro
      - ./certs:/certs:ro  # Mount certificate directory
    networks:
      - traefik
    environment:
      - TRAEFIK_LOG_LEVEL=INFO

networks:
  traefik:
    external: true

---
# traefik.yml - Static configuration
api:
  dashboard: true
  insecure: false  # Set to true only for testing

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entrypoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"

providers:
  file:
    filename: /dynamic.yml
    watch: true

certificatesResolvers:
  custom:
    acme:
      email: your-email@domain.com
      storage: /certs/acme.json
      # Use HTTP challenge if your cert-server supports it
      httpChallenge:
        entryPoint: web
      # Or use DNS challenge if your DNS server supports it
      # dnsChallenge:
      #   provider: your-dns-provider
      #   delayBeforeCheck: 30

log:
  level: INFO

accessLog: {}

---
# dynamic.yml - Dynamic configuration
http:
  routers:
    # Traefik Dashboard
    traefik-dashboard:
      rule: "Host(`traefik.aip.dxc.com`)"
      entryPoints:
        - websecure
      service: api@internal
      tls:
        certResolver: custom

    # Jenkins
    jenkins:
      rule: "Host(`jenkins.aip.dxc.com`)"
      entryPoints:
        - websecure
      service: jenkins
      tls:
        certResolver: custom

    # Heimdall
    heimdall:
      rule: "Host(`heimdall.aip.dxc.com`) || Host(`dashboard.aip.dxc.com`)"
      entryPoints:
        - websecure
      service: heimdall
      tls:
        certResolver: custom

  services:
    # Jenkins service (LXC Container)
    jenkins:
      loadBalancer:
        servers:
          - url: "http://192.168.0.123:8080"
        healthCheck:
          path: "/login"
          interval: "30s"
          timeout: "5s"

    # Heimdall service (LXC Container)
    heimdall:
      loadBalancer:
        servers:
          - url: "http://192.168.0.94:80"
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "5s"

    # Prometheus service (LXC Container)
    prometheus:
      loadBalancer:
        servers:
          - url: "http://192.168.0.90:9090"
        healthCheck:
          path: "/-/healthy"
          interval: "30s"
          timeout: "5s"

    # Grafana service (LXC Container) 
    grafana:
      loadBalancer:
        servers:
          - url: "http://192.168.0.90:3000"
        healthCheck:
          path: "/api/health"
          interval: "30s"
          timeout: "5s"

    # Helpdesk service (LXC Container)
    helpdesk:
      loadBalancer:
        servers:
          - url: "http://192.168.0.195:80"
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "5s"

    # Vaultwarden service (LXC Container)
    vaultwarden:
      loadBalancer:
        servers:
          - url: "http://192.168.0.210:80"
        healthCheck:
          path: "/alive"
          interval: "30s"
          timeout: "5s"

    # Analyst service (Docker Container)
    analyst:
      loadBalancer:
        servers:
          - url: "http://192.168.0.200:80"
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "5s"

    # MDWatch service (Docker Container)
    mdwatch:
      loadBalancer:
        servers:
          - url: "http://192.168.0.201:80"
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "5s"

# TLS Configuration for custom certificates
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /certs/default.crt
        keyFile: /certs/default.key

---
# Alternative dynamic.yml for custom certificate server
# Use this if you want to use certificates from your cert-server (192.168.0.122)

http:
  routers:
    traefik-dashboard:
      rule: "Host(`traefik.aip.dxc.com`)"
      entryPoints:
        - websecure
      service: api@internal
      tls:
        domains:
          - main: "traefik.aip.dxc.com"

    jenkins:
      rule: "Host(`jenkins.aip.dxc.com`)"
      entryPoints:
        - websecure
      service: jenkins
      tls:
        domains:
          - main: "jenkins.aip.dxc.com"

    heimdall:
      rule: "Host(`heimdall.aip.dxc.com`)"
      entryPoints:
        - websecure
      service: heimdall
      tls:
        domains:
          - main: "heimdall.aip.dxc.com"

  services:
    jenkins:
      loadBalancer:
        servers:
          - url: "http://192.168.0.123:8080"

    heimdall:
      loadBalancer:
        servers:
          - url: "http://192.168.0.94:80"

    prometheus:
      loadBalancer:
        servers:
          - url: "http://192.168.0.90:9090"

    grafana:
      loadBalancer:
        servers:
          - url: "http://192.168.0.90:3000"

    helpdesk:
      loadBalancer:
        servers:
          - url: "http://192.168.0.195:80"

    vaultwarden:
      loadBalancer:
        servers:
          - url: "http://192.168.0.210:80"

    analyst:
      loadBalancer:
        servers:
          - url: "http://192.168.0.200:80"

    mdwatch:
      loadBalancer:
        servers:
          - url: "http://192.168.0.201:80"

tls:
  certificates:
    - certFile: /certs/jenkins.aip.dxc.com.crt
      keyFile: /certs/jenkins.aip.dxc.com.key
      stores:
        - default
    - certFile: /certs/heimdall.aip.dxc.com.crt
      keyFile: /certs/heimdall.aip.dxc.com.key
      stores:
        - default
    - certFile: /certs/traefik.aip.dxc.com.crt
      keyFile: /certs/traefik.aip.dxc.com.key
      stores:
        - default